<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>salah - python</title><link href="https://salah93.github.io/" rel="alternate"></link><link href="https://salah93.github.io/feeds/python.atom.xml" rel="self"></link><id>https://salah93.github.io/</id><updated>2017-09-17T10:00:00-04:00</updated><entry><title>ipython tips</title><link href="https://salah93.github.io/ipython-tips.html" rel="alternate"></link><published>2017-09-17T10:00:00-04:00</published><updated>2017-09-17T10:00:00-04:00</updated><author><name>Salah Ahmed</name></author><id>tag:salah93.github.io,2017-09-17:/ipython-tips.html</id><summary type="html">&lt;p&gt;IPython is a very helpful tool in prototyping and testing code in python. Its many rich features make exploring code base's painless and easy.&lt;/p&gt;
&lt;h2&gt;installation&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install -U ipython
ipython
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;magic&lt;/h2&gt;
&lt;p&gt;ipython has a set of "magic" commands
+ %load - loads file (copies file into repl)
+ %run - runs file (global variables â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;IPython is a very helpful tool in prototyping and testing code in python. Its many rich features make exploring code base's painless and easy.&lt;/p&gt;
&lt;h2&gt;installation&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install -U ipython
ipython
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;magic&lt;/h2&gt;
&lt;p&gt;ipython has a set of "magic" commands
+ %load - loads file (copies file into repl)
+ %run - runs file (global variables and functions enter namespace)
+ %magic - list magic variables
+ %hist - history of current or previous repl sessions
+ %timeit - time execution of python statement&lt;/p&gt;
&lt;h2&gt;help&lt;/h2&gt;
&lt;h3&gt;question mark&lt;/h3&gt;
&lt;p&gt;Using the "?" we can find methods that match certain patterns and we can look up docstrings/source code.
This can help us understand parameters and method function. The "?" can also be used with magic commands!
+ np.&lt;em&gt;load&lt;/em&gt;?
+ requests.get?? =&amp;gt; source code
+ requests.get? =&amp;gt; docstring
+ %timeit?
+ %magic
+ %help&lt;/p&gt;
&lt;h1&gt;debugging&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;%pdb =&amp;gt; automatically jump into debugger when exception occurs&lt;/li&gt;
&lt;li&gt;%debug =&amp;gt; jump into debugger on last exception&lt;/li&gt;
&lt;li&gt;%run -d filename.py =&amp;gt; execute program via debugger&lt;/li&gt;
&lt;li&gt;%whos&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;recalling past commands&lt;/h2&gt;
&lt;p&gt;where X is the number of the output/input
+ output: _X
+ input:  _iX&lt;/p&gt;
&lt;h2&gt;logging sessions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;%logstart -ort&lt;/li&gt;
&lt;li&gt;%logoff&lt;/li&gt;
&lt;li&gt;%logon&lt;/li&gt;
&lt;li&gt;%logstate&lt;/li&gt;
&lt;/ul&gt;</content><category term="python"></category></entry></feed>